### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  assignUsers(email: String!, projectId: String!): User_project
  createPersonalTask(description: String!, expires: DateTime!, name: String!, userId: String!): Task
  createProject(color: String!, description: String!, expires: DateTime!, name: String!, userId: String!): Project
  createProjectTask(description: String!, email: String!, expires: DateTime!, name: String!, projectId: String!): Task
  deleteTask(taskId: String!): Task
  deleteUserProject(userProjectId: String!): User_project
  updateRole(role: String!, userId: String!): User
  updateState(state: String!, taskId: String!): Task
  updateStateProject(projectId: String!, state: String!): Project
}

type Project {
  color: String
  completedAt: DateTime
  createdAt: DateTime
  description: String
  expires: DateTime
  id: String
  name: String
  state: String
}

type Query {
  all_projects_of_a_user(userId: String!): [User_project]
  all_users_of_a_project(projectId: String!): [User_project]
  project(projectId: String!): Project
  task(taskId: String!): Task
  task_of_project(projectId: String!): [Task]
  tasks(userId: String!): [Task]
  tasks_completed(userId: String!): [Task]
  tasks_not_completed(userId: String!): [Task]
  user(userId: String!): User
  users: [User]
}

type Task {
  completedAt: DateTime
  createdAt: DateTime
  description: String
  expires: DateTime
  id: String
  isPersonal: Boolean
  name: String
  project: Project
  responsible: User
  state: String
}

type User {
  createdAt: DateTime
  email: String
  id: String
  image: String
  name: String
  role: String
}

type User_project {
  id: String
  isOwner: Boolean
  project: Project
  user: User
}